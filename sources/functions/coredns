#! /bin/bash
# CoreDNS installer
# Yanked from https://github.com/wg-dashboard/wg-dashboard/blob/master/install_script.sh#L120

_install_coredns () {
	echo "Installing CoreDNS"
	# make and enter coredns folder
	mkdir -p /etc/coredns
	cd /etc/coredns || return 1
	if [[ "$(lsb_release -is)" == "Raspbian" ]]; then
		# download coredns
		curl -L https://github.com/coredns/coredns/releases/download/v1.5.1/coredns_1.5.1_linux_arm.tgz --output coredns.tgz
	elif [[ "$(lsb_release -is)" == "Ubuntu" ]]; then
		# download coredns
		curl -L https://github.com/coredns/coredns/releases/download/v1.5.1/coredns_1.5.1_linux_amd64.tgz --output coredns.tgz
	elif [[ "$(lsb_release -is)" == "Debian" ]]; then
		# download coredns
		curl -L https://github.com/coredns/coredns/releases/download/v1.5.1/coredns_1.5.1_linux_amd64.tgz --output coredns.tgz
	fi
	# unzip and delete tar
	tar -xzf coredns.tgz
	rm -f coredns.tgz
	# move coredns to correct directory
	mv coredns /usr/bin/coredns
	# write default coredns config
	echo ". {
		forward . tls://1.1.1.1 {
			tls_servername tls.cloudflare-dns.com
			health_check 10s
		}
		cache
		errors
	}" > /etc/coredns/Corefile
	# write autostart config
	echo "
	[Unit]
	Description=CoreDNS DNS Server
	Documentation=https://coredns.io/manual/toc/
	After=network.target
	[Service]
	LimitNOFILE=8192
	ExecStart=/usr/bin/coredns -conf /etc/coredns/Corefile -cpu 10%
	Restart=on-failure
	[Install]
	WantedBy=multi-user.target" > /etc/systemd/system/coredns.service
	# disable systemd-resolved from startup
	systemctl disable systemd-resolved
	# stop systemd-resolved service
	systemctl stop systemd-resolved
	# enable coredns on system start
	systemctl enable coredns
	# start coredns
	systemctl start coredns
}

_remove_coredns () {
	echo "Removing CoreDNS"
	systemctl disable --now coredns
	systemctl enable --now systemd-resolved
	rm -rf /etc/coredns
	rm -rf /usr/bin/coredns
}