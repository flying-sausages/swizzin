function pyenv_install() {
  if [[ ! -d /opt/pyenv ]]; then
    echo_progress_start "Setting up pyenv version manager"
    git clone https://github.com/pyenv/pyenv.git /opt/pyenv >> $log 2>&1
    git clone https://github.com/pyenv/pyenv-virtualenv.git /opt/pyenv/plugins/pyenv-virtualenv >> $log 2>&1
    git clone https://github.com/pyenv/pyenv-update.git /opt/pyenv/plugins/pyenv-update >> $log 2>&1
    echo 'export PYENV_ROOT="/opt/pyenv"' >> /root/.bashrc
    echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> /root/.bashrc
    export PYENV_ROOT="/opt/pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    apt_install make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
    echo_progress_done "Pyenv version manager installed"
  else
    pyenv_update
  fi
}

function pyenv_update() {
  echo_progress_start "Updating pyenv"
  /opt/pyenv/bin/pyenv update  >> $log 2>&1
  echo_progress_done
}

function pyenv_install_version() {
  version=$1
  versions=$(/opt/pyenv/bin/pyenv versions)
  if [[ ! $versions =~ $version ]]; then
    echo_progress_start "Compiling Python $version. This may take some time ... "
    /opt/pyenv/bin/pyenv install $version >> "$log" 2>&1
    echo_progress_done "Compiling done"
  else
    echo_log_only "Python $version already installed!"
  fi
}

function pyenv_create_venv() {
  version=$1
  destination=$2
  mkdir -p $destination
  echo_progress_start "Creating venv"
  /opt/pyenv/versions/$version/bin/python3 -m venv $destination >> "$log" 2>&1
  echo_progress_done "venv created"
}

function python_getpip() {
  if ! command -v pip > /dev/null 2>&1; then
    cd /tmp
    echo_progress_start "Installing pip"
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py >> $log 2>&1
    python2 get-pip.py >> $log 2>&1
    pip install virtualenv 2>&1 | tee -a $log
    echo_progress_done "pip installed"
  fi
}

function python2_venv {
  user=$1
  app=$2
  echo_progress_start "Setting up the ${app} venv ..."
  mkdir -p /opt/.venv
  chown ${user}: /opt/.venv  2>&1 | tee -a $log
  python2 -m virtualenv /opt/.venv/${app} 2>&1 | tee -a $log
  chown -R ${user}: /opt/.venv/${app} 2>&1 | tee -a $log
  echo_progress_done "venv for $app created"
}

function python2_home_venv {
  user=$1
  app=$2
  echo_progress_start "Setting up the ${app} venv in ${user}'s home..."
  mkdir -p /home/${user}/.venv
  chown ${user}: /home/${user}/.venv 2>&1 | tee -a $log
  python2 -m virtualenv /home/${user}/.venv/${app} 2>&1 | tee -a $log
  chown -R ${user}: /home/${user}/.venv/${app} 2>&1 | tee -a $log
  echo_progress_done "venv for $app created"
}

function python3_venv {
  user=$1
  app=$2
  echo_progress_start "Setting up the ${app} venv ..."
  mkdir -p /opt/.venv
  chown ${user}: /opt/.venv
  python3 -m venv /opt/.venv/${app} 2>&1 | tee -a $log
  chown -R ${user}: /opt/.venv/${app}
  echo_progress_done "venv for $app created"

}